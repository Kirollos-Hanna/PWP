openapi: 3.0.3
servers:
  - url: /api
  - url: http://127.0.0.1:5000/api/
    variables: {}
components:
  parameters:
    user:
      description: Selected user's unique name
      in: path
      name: user
      required: true
      schema:
        type: string
    product:
      description: Selected product's unique name
      in: path
      name: product
      required: true
      schema:
        type: string
    review:
      description: Selected review's unique name
      in: path
      name: review
      required: true
      schema:
        type: string
    category:
      description: Selected category's unique name
      in: path
      name: category
      required: true
      schema:
        type: string
  schemas:
    User:
      properties:
        avatar:
          description: The url of the user's avatar
          format: uri
          maxLength: 256
          minLength: 1
          pattern: ^https?://
          type: string
          nullable: true
        email:
          description: User email
          format: email
          maxLength: 256
          minLength: 1
          type: string
        name:
          description: The user's name
          maxLength: 256
          minLength: 1
          type: string
        password:
          description: User password
          maxLength: 256
          minLength: 6
          type: string
        role:
          default: Customer
          description: The user's role
          enum:
            - Customer
            - Admin
            - Seller
          type: string
      required:
        - name
        - role
        - password
        - email
      type: object
    Auth:
      properties:
        name:
          description: The user's name
          maxLength: 256
          minLength: 1
          type: string
        password:
          description: User password
          maxLength: 256
          minLength: 6
          type: string
        email:
          description: User email
          format: email
          maxLength: 256
          minLength: 1
          type: string
      required:
        - name
        - password
        - email
      type: object
    Product:
      properties:
        categories:
          description: An array of category names that this product belongs to
          items:
            type: string
            maxLength: 256
            minLength: 1
          maxItems: 255
          type: array
          nullable: true
        description:
          description: Product description
          maxLength: 65535
          minLength: 1
          type: string
        images:
          description: A list of product image urls
          items:
            format: uri
            maxLength: 256
            minLength: 1
            pattern: ^https?://
            type: string
          maxItems: 255
          type: array
          nullable: true
        name:
          description: Product Name
          maxLength: 256
          minLength: 1
          type: string
        price:
          description: Product Price
          maximum: 100000
          minimum: 1
          type: number
        user_name:
          description: The user name of the user who created this product
          maxLength: 256
          minLength: 1
          type: string
      required:
        - name
        - price
        - user_name
      type: object
    Review:
      properties:
        product_name:
          description: The product name being reviewed
          maxLength: 256
          minLength: 1
          type: string
        rating:
          description: The rating of the product by a user from 1 to 10
          maximum: 10
          minimum: 1
          type: number
        user_name:
          description: The username of the reviewer
          maxLength: 256
          minLength: 1
          type: string
      required:
        - rating
        - product_name
        - user_name
      type: object
    Category:
      properties:
        image:
          description: A url for an image related to the category
          format: uri
          maxLength: 256
          minLength: 1
          pattern: ^https?://
          type: string
          nullable: true
        name:
          description: Category name
          maxLength: 256
          minLength: 1
          type: string
        product_names:
          description: A list of product names related to the category
          items:
            maxLength: 256
            minLength: 1
            type: string
          type: array
      required:
        - name
      type: object
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: jwt
info:
  title: E-Commerce API
  version: 1.0.0
  description: >
    E-Commerce API is a Python API for managing and retrieving information about
    products, reviews, categories, and users in an online store.
  contact:
    url: https://github.com/Kirollos-Hanna/PWP
    name: Maintainers
  license:
    name: GNU General Public License Version 3
    url: https://github.com/Kirollos-Hanna/PWP/blob/main/LICENSE
paths:
  /users/:
    get:
      description: Get the list of users
      security:
        - jwt: []
      responses:
        '200':
          description: List of users
          content:
            application/vnd.mason+json:
              example:
                items:
                  - name: pekka
                    email: pekka@email.com
                    password: password
                    avatar: null
                    role: Seller
                  - '@controls': null
                    item:
                      href: /api/users/matti/
                  - name: matti
                    email: matti@email.com
                    password: salasana
                    avatar: null
                    role: Customer
                  - '@controls': null
                    item:
                      href: /api/users/matti/
                  - name: kalamies
                    email: kalamies@email.com
                    password: hauki
                    avatar: null
                    role: Admin
                  - '@controls': null
                    item:
                      href: /api/users/kalamies/
        '401':
          description: Not authorized
    post:
      description: Create an user
      requestBody:
        description: JSON document that contains data for a new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: Kalamies
              avatar: https://kalamies.com/profile_picture.png
              role: Seller
              password: password123
              email: kalamies@gmail.com
      responses:
        '201':
          description: Succesfully registered.
          headers:
            Location:
              description: URI of the new user
              schema:
                type: string
        '400':
          description: Bad request, email address is not valid
        '409':
          description: Conflict, user or email already exists
        '415':
          description: Unsupported media type, content is not application/JSON
  /users/{user}/:
    parameters:
      - $ref: '#/components/parameters/user'
    get:
      description: Get details of one user
      security:
        - jwt: []
      responses:
        '200':
          description: Data of a single user kalamies
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  collection:
                    href: /api/users/
                commercemeta:delete:
                  href: /api/users/kalamies/
                  method: DELETE
                  title: commercemeta:delete
                commercemeta:products-by:
                  href: /api/users/%3CUser%203%3E/products/
                commercemeta:reviews-by:
                  href: /api/users/%3CUser%203%3E/reviews/
                edit:
                  encoding: json
                  href: /api/users/kalamies/
                  method: PUT
                  schema:
                    properties:
                      avatar:
                        description: The url of the user's avatar
                        format: uri
                        maxLength: 256
                        minLength: 1
                        pattern: ^https?://
                        type:
                          - string
                          - 'null'
                      email:
                        description: User email
                        format: email
                        maxLength: 256
                        minLength: 1
                        type: string
                      name:
                        description: The user's name
                        maxLength: 256
                        minLength: 1
                        type: string
                      password:
                        description: User password
                        maxLength: 256
                        minLength: 6
                        type: string
                      role:
                        default: Customer
                        description: The user's role
                        enum:
                          - Customer
                          - Admin
                          - Seller
                        type: string
                    required:
                      - name
                      - role
                      - password
                      - email
                    type: object
                  title: edit
                profile:
                  href: /profiles/user/
                self:
                  href: /api/users/kalamies/
                '@namespaces':
                  commercemeta:
                    name: /commercemeta/link-relations#
                avatar: null
                email: kalamies@email.com
                id: 3
                name: kalamies
                password: hauki
                products:
                  - description: >-
                      UPGRADE TO NVMe SPEED Whether you need a boost for
                      gamingor a seamless workflow for heavy graphics, the 980
                      is a smart choice.
                    id: 3
                    images: null
                    name: SAMSUNG 980 SSD 1TB PCle 3.0x4, NVMe M.2 2280
                    price: 69.99
                  - description: A book by George Orwell
                    id: 4
                    images: null
                    name: '1984'
                    price: 29.99
                reviews:
                  - description: Almost the perfect laptop! Thinkpads rock!
                    id: 3
                    product:
                      description: A refurbished business model laptop.
                      id: 2
                      images: null
                      name: Lenovo Thinkpad t420
                      price: 149.99
                    rating: 4.4
                role: Admin
        '401':
          description: Not authorized
        '404':
          description: User not found
    put:
      description: Replace user's basic data with new values
      security:
        - jwt: []
      requestBody:
        description: >-
          JSON document that contains new basic data for the user. Kalamies
          changes his password.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
            example:
              name: Kalamies
              avatar: https://kalamies.com/profile_picture.png
              role: Seller
              password: kalamieskukaties
              email: kalamies@gmail.com
      responses:
        '204':
          description: User attributes succesfully udpated
        '400':
          description: Bad request, email address or user is not valid
        '401':
          description: Not authorized
        '409':
          description: Cannot modify username, since it has references in other tables
        '415':
          description: Unsupported media type, content is not application/JSON
    delete:
      description: Delete user
      security:
        - jwt: []
      responses:
        '204':
          description: User account successfully deleted
        '401':
          description: Not authorized
        '404':
          description: User not found
  /users/products/:
    get:
      description: Get a list of products by user
      security:
        - jwt: []
      responses:
        '200':
          description: List of products by user
          content:
            application/vnd.mason+json:
              example:
                collection:
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Instruments/products/
                    item:
                      href: /api/users/pekka/products/Fender%20Stratocaster/
                    categories:
                      - id: 1
                        image: null
                        name: Instruments
                    description: >-
                      A brand new Fender Stratocaster Deluxe Edition. Made in
                      USA.
                    id: 1
                    images: null
                    name: Fender Stratocaster
                    price: 1999.99
                    reviews:
                      - description: An amazing guitar!!
                        id: 1
                        product_name: Fender Stratocaster
                        rating: 4.9
                        user_name: matti
                    user_name: pekka
                  - '@controls':
                      commercemeta:products-by:
                        href: /api/categories/Electronics/products/
                      item:
                        href: /api/users/pekka/products/Lenovo%20Thinkpad%20t420/
                    categories:
                      - id: 2
                        image: null
                        name: Electronics
                    description: A refurbished business model laptop.
                    id: 2
                    images: null
                    name: Lenovo Thinkpad t420
                    price: 149.99
                    reviews:
                      - description: Bad laptop, can't run Fortnite with 300 fps.
                        id: 2
                        product_name: Lenovo Thinkpad t420
                        rating: 0.5
                        user_name: matti
                      - description: Almost the perfect laptop! Thinkpads rock!
                        id: 3
                        product_name: Lenovo Thinkpad t420
                        rating: 4.4
                        user_name: kalamies
                    user_name: pekka
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Electronics/products/
                    item:
                      href: >-
                        /api/users/kalamies/products/SAMSUNG%20980%20SSD%201TB%20PCle%203.0x4,%20NVMe%20M.2%202280/
                    categories:
                      - id: 2
                        image: null
                        name: Electronics
                    description: >-
                      UPGRADE TO NVMe SPEED Whether you need a boost for
                      gamingor a seamless workflow for heavy graphics, the 980
                      is a smart choice.
                    id: 3
                    images: null
                    name: SAMSUNG 980 SSD 1TB PCle 3.0x4, NVMe M.2 2280
                    price: 69.99
                    reviews: []
                    user_name: kalamies
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Books/products/
                    item:
                      href: /api/users/kalamies/products/1984/
                    categories:
                      - id: 3
                        image: asdasdsad.png
                        name: Books
                    description: A book by George Orwell
                    id: 4
                    images: null
                    name: '1984'
                    price: 29.99
                    reviews: []
                    user_name: kalamies
        '401':
          description: Not authorized
    post:
      description: Add a product
      security:
        - jwt: []
      requestBody:
        description: JSON document that contains data for a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: Lenovo Thinkpad T420
              description: An old refurbished business laptop
              price: 149.9
              user_name: Kalamies
              categories:
                - Electronics
                - Laptops
      responses:
        '201':
          description: Succesfully added.
          headers:
            Location:
              description: URI of the new product
              schema:
                type: string
        '400':
          description: Bad request, email address or user is not valid
        '401':
          description: Not authorized
        '409':
          description: Conflict, product already exists
        '415':
          description: Unsupported media type, content is not application/JSON
  /categories/products/:
    get:
      description: Get a list of products by category
      security:
        - jwt: []
      responses:
        '200':
          description: List of products by category
          content:
            application/vnd.mason+json:
              example:
                collection:
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Instruments/products/
                    item:
                      href: /api/users/pekka/products/Fender%20Stratocaster/
                    categories:
                      - id: 1
                        image: null
                        name: Instruments
                    description: >-
                      A brand new Fender Stratocaster Deluxe Edition. Made in
                      USA.
                    id: 1
                    images: null
                    name: Fender Stratocaster
                    price: 1999.99
                    reviews:
                      - description: An amazing guitar!!
                        id: 1
                        product_name: Fender Stratocaster
                        rating: 4.9
                        user_name: matti
                    user_name: pekka
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Electronics/products/
                    item:
                      href: /api/users/pekka/products/Lenovo%20Thinkpad%20t420/
                    categories:
                      - id: 2
                        image: null
                        name: Electronics
                    description: A refurbished business model laptop.
                    id: 2
                    images: null
                    name: Lenovo Thinkpad t420
                    price: 149.99
                    reviews:
                      - description: Bad laptop, can't run Fortnite with 300 fps.
                        id: 2
                        product_name: Lenovo Thinkpad t420
                        rating: 0.5
                        user_name: matti
                      - description: Almost the perfect laptop! Thinkpads rock!
                        id: 3
                        product_name: Lenovo Thinkpad t420
                        rating: 4.4
                        user_name: kalamies
                    user_name: pekka
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Electronics/products/
                    item:
                      href: >-
                        /api/users/kalamies/products/SAMSUNG%20980%20SSD%201TB%20PCle%203.0x4,%20NVMe%20M.2%202280/
                    categories:
                      - id: 2
                        image: null
                        name: Electronics
                    description: >-
                      UPGRADE TO NVMe SPEED Whether you need a boost for
                      gamingor a seamless workflow for heavy graphics, the 980
                      is a smart choice.
                    id: 3
                    images: null
                    name: SAMSUNG 980 SSD 1TB PCle 3.0x4, NVMe M.2 2280
                    price: 69.99
                    reviews: []
                    user_name: kalamies
                  - '@controls': null
                    commercemeta:products-by:
                      href: /api/categories/Books/products/
                    item:
                      href: /api/users/kalamies/products/1984/
                    categories:
                      - id: 3
                        image: asdasdsad.png
                        name: Books
                    description: A book by George Orwell
                    id: 4
                    images: null
                    name: '1984'
                    price: 29.99
                    reviews: []
                    user_name: kalamies
        '401':
          description: Not authorized
    post:
      description: Add a product
      security:
        - jwt: []
      requestBody:
        description: JSON document that contains data for a new product
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: Lenovo Thinkpad T420
              description: An old refurbished business laptop
              price: 149.9
              user_name: Kalamies
              categories:
                - Electronics
                - Laptops
      responses:
        '201':
          description: Succesfully added.
          headers:
            Location:
              description: URI of the new product
              schema:
                type: string
        '400':
          description: Bad request, email address or user is not valid
        '401':
          description: Not authorized
        '409':
          description: Conflict, product already exists
        '415':
          description: Unsupported media type, content is not application/JSON
  /users/{user}/products/{product}/:
    parameters:
      - $ref: '#/components/parameters/product'
      - $ref: '#/components/parameters/user'
    get:
      description: Get a product by user and product name
      security:
        - jwt: []
      responses:
        '200':
          description: Data of a single kalamies' book "1984"
          content:
            application/vnd.mason+json:
              example:
                collection:
                  '@controls':
                    href: /api/users/products/
                  commercemeta:delete:
                    href: /api/users/kalamies/products/1984/
                    method: DELETE
                    title: commercemeta:delete
                  commercemeta:products-by:
                    href: /api/categories/Books/products/
                  edit:
                    encoding: json
                    href: /api/users/kalamies/products/1984/
                    method: PUT
                    schema:
                      $ref: '#/components/schemas/Product'
                  profile:
                    href: /profiles/product/
                  self:
                    href: /api/users/kalamies/products/1984/
                '@namespaces':
                  commercemeta:
                    name: /commercemeta/link-relations#
                categories:
                  - id: 3
                    image: asdasdsad.png
                    name: Books
                description: A book by George Orwell
                id: 4
                images: null
                name: '1984'
                price: 29.99
                reviews: []
        '401':
          description: Not authorized
        '404':
          description: Product not found
    put:
      description: Replace products's basic data with new values
      security:
        - jwt: []
      requestBody:
        description: >-
          JSON document that contains new basic data for the product. Kalamies
          changes his product's price.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
            example:
              name: Fender Stratocaster
              description: A brand new electric guitar, now with lowered price!
              price: 1499.99
              user_name: Kalamies
      responses:
        '204':
          description: Product attributes succesfully udpated
        '400':
          description: This product doesn't exist in db
        '401':
          description: Not authorized
        '409':
          description: Cannot update fields that are referenced in other tables.
        '415':
          description: Unsupported media type, content is not application/JSON
    delete:
      description: Delete product
      security:
        - jwt: []
      responses:
        '204':
          description: Product successfully deleted
        '401':
          description: Not authorized
        '404':
          description: Product not found
  /users/reviews/:
    get:
      description: Get a list of reviews
      security:
        - jwt: []
      responses:
        '200':
          description: List of reviews
          content:
            application/vnd.mason+json:
              example:
                collection:
                  '@controls':
                    commercemeta:add-review:
                      encoding: json
                      href: /api/users/reviews/
                      method: POST
                      schema:
                        $ref: '#/components/schemas/Review'
                      title: add new review
                    commercemeta:users-all:
                      href: /api/users/
                      title: all users
                    self:
                      href: /api/users/reviews/
                  '@namespaces':
                    commercemeta:
                      name: /commercemeta/link-relations#
                  items:
                    - '@controls': null
                      commercemeta:reviews-by:
                        href: /api/users/matti/reviews/
                      item:
                        href: /api/users/matti/reviews/Fender%20Stratocaster/
                      description: An amazing guitar!!
                      id: 1
                      product_name: Fender Stratocaster
                      rating: 4.9
                      user_name: matti
                    - '@controls': null
                      commercemeta:reviews-by:
                        href: /api/users/matti/reviews/
                      item:
                        href: /api/users/matti/reviews/Lenovo%20Thinkpad%20t420/
                      description: Bad laptop, can't run Fortnite with 300 fps.
                      id: 2
                      product_name: Lenovo Thinkpad t420
                      rating: 0.5
                      user_name: matti
        '401':
          description: Not authorized
    post:
      description: Add a review
      security:
        - jwt: []
      requestBody:
        description: JSON document that contains data for a new review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
            example:
              rating: 0
              product_name: Lenovo Thinkpad T420
              user_name: Matti Meikäläinen
      responses:
        '201':
          description: Succesfully added.
          headers:
            Location:
              description: URI of the new review
              schema:
                type: string
        '400':
          description: Bad request, email address or user is not valid
        '401':
          description: Not authorized
        '409':
          description: Conflict, review already exists
        '415':
          description: Unsupported media type, content is not application/JSON
  /users/{user}/reviews/{product}/:
    parameters:
      - $ref: '#/components/parameters/product'
      - $ref: '#/components/parameters/user'
    get:
      description: Get a review by user and product name
      security:
        - jwt: []
      responses:
        '200':
          description: Data of a single review by kalamies
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  collection:
                    href: /api/users/reviews/
                  commercemeta:delete:
                    href: /api/users/kalamies/reviews/Lenovo%20Thinkpad%20t420/
                    method: DELETE
                    title: commercemeta:delete
                  commercemeta:reviews-by:
                    href: /api/users/kalamies/reviews/
                  edit:
                    encoding: json
                    href: /api/users/kalamies/reviews/Lenovo%20Thinkpad%20t420/
                    method: PUT
                    schema:
                      $ref: '#/components/schemas/Review'
                  profile:
                    href: /profiles/review/
                  self:
                    href: /api/users/kalamies/reviews/Lenovo Thinkpad t420/
                '@namespaces':
                  commercemeta:
                    name: /commercemeta/link-relations#
                description: Almost the perfect laptop! Thinkpads rock!
                id: 3
                product:
                  description: A refurbished business model laptop.
                  id: 2
                  images: null
                  name: Lenovo Thinkpad t420
                  price: 149.99
                rating: 4.4
                user:
                  avatar: null
                  email: kalamies@email.com
                  id: 3
                  name: kalamies
                  password: hauki
                  role: Admin
        '401':
          description: Not authorized
        '404':
          description: Review not found
    put:
      description: Replace reviews's basic data with new values
      security:
        - jwt: []
      requestBody:
        description: >-
          JSON document that contains new basic data for the review. Kalamies
          changes his reviews' rating.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
            example:
              rating: 6
              product_name: Moccamaster
              user_name: Kalamies
      responses:
        '204':
          description: Review attributes succesfully udpated
        '400':
          description: This review doesn't exist in db
        '401':
          description: Not authorized
        '409':
          description: Cannot update fields that are referenced in other tables.
        '415':
          description: Unsupported media type, content is not application/JSON
    delete:
      description: Delete review
      security:
        - jwt: []
      responses:
        '204':
          description: Review successfully deleted
        '401':
          description: Not authorized
        '404':
          description: Review not found
  /categories/:
    get:
      description: Get a list of product categories
      responses:
        '200':
          description: List of categories
          content:
            application/vnd.mason+json:
              example:
                '@controls':
                  commercemeta:add-category:
                    encoding: json
                    href: /api/categories/
                    method: POST
                    schema:
                      $ref: '#/components/schemas/Category'
                  commercemeta:products-all:
                    href: /api/users/products/
                    title: all products
                  self:
                    href: /api/categories/
                '@namespaces':
                  commercemeta:
                    name: /commercemeta/link-relations#
                items:
                  - '@controls': null
                    item:
                      href: /api/categories/Instruments/
                    id: 1
                    image: null
                    name: Instruments
                  - '@controls': null
                    item:
                      href: /api/categories/Electronics/
                    id: 2
                    image: null
                    name: Electronics
                  - '@controls': null
                    item:
                      href: /api/categories/Books/
                    id: 3
                    image: asdasdsad.png
                    name: Books
    post:
      description: Add a category
      security:
        - jwt: []
      requestBody:
        description: JSON document that contains data for a new category
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
            example:
              name: Winter coats
      responses:
        '201':
          description: Succesfully added.
          headers:
            Location:
              description: URI of the new category
              schema:
                type: string
        '400':
          description: Bad request, email address or user is not valid
        '401':
          description: Not authorized
        '409':
          description: Conflict, category already exists
        '415':
          description: Unsupported media type, content is not application/JSON
  /categories/{category}:
    parameters:
      - $ref: '#/components/parameters/category'
    get:
      description: Get a single category
      security:
        - jwt: []
      responses:
        '200':
          description: Data of a single category Books
          content:
            'application/vnd.mason+json:':
              example:
                '@controls':
                  collection:
                    href: /api/categories/
                  commercemeta:delete:
                    href: /api/categories/Books/
                    method: DELETE
                    title: commercemeta:delete
                  edit:
                    encoding: json
                    href: /api/categories/Books/
                    method: PUT
                    schema:
                      $ref: '#/components/schemas/Category'
                  profile:
                    href: /profiles/category/
                  self:
                    href: /api/categories/Books/
                '@namespaces':
                  commercemeta:
                    name: /commercemeta/link-relations#
                id: 3
                image: asdasdsad.png
                name: Books
                products:
                  - description: A book by George Orwell
                    id: 4
                    images: null
                    name: '1984'
                    price: 29.99
        '401':
          description: Not authorized
        '404':
          description: Category not found
    put:
      description: Replace category's basic data with new values
      security:
        - jwt: []
      requestBody:
        description: >-
          JSON document that contains new basic data for the category. Admin
          changed the name of the category.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
            example:
              image: https://mypictures.com/books.png
              name: Horror books
      responses:
        '204':
          description: Category attributes succesfully udpated
        '400':
          description: This category doesn't exist in db
        '401':
          description: Not authorized
        '409':
          description: Cannot update fields that are referenced in other tables.
        '415':
          description: Unsupported media type, content is not application/JSON
    delete:
      description: Delete category
      security:
        - jwt: []
      responses:
        '204':
          description: Category successfully deleted
        '401':
          description: Not authorized
        '404':
          description: Category not found
  /users/auth/:
    post:
      description: Authenticate user
      security:
        - jwt: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: Successfully authenticated
        '401':
          description: Error
    delete:
      description: Deauthenticate user
      security:
        - jwt: []
      responses:
        '200':
          description: Authentication succesfully deleted
        '401':
          description: Not authorized
        '403':
          description: Provide a valid auth token
